"""
Django settings for config_project project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os


from .config import AMAZON_CREDENTIAL,  HOST_PASSWORD

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'b86b8v(oq8qp57voul513g@m8azix3f-y!-b)b+c=px=-cll!h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
        #Installed app
    'rest_framework',
    'accounts',
    'uploads',
    'rest_framework.authtoken',
    'django_crontab',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # 'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
}


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'accounts.middleware.ActiveUserMiddleware',
]

ROOT_URLCONF = 'config_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR + '/templates/',],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

CACHE = {
    'default': {
        'BACKEND': 'django.core.cache.backend.memcachec.MemcachedCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

CRONJOBS = [
    ('*/5 * * * *', 'uploads.cron.my_scheduled_job'),
    ('*/1 * * * *', 'uploads.cron.delete_status')
]

USER_ONLINE_TIMEOUT = 300

USER_LASTSEEN_TIMEOUT = 60 * 60 * 24 * 7

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

UPLOAD_PATH = 'images/'
UPLOAD_PATH_PROFILE='profile/images/'

STATIC_URL = '/static/'


if DEBUG is False:
    AWS_ACCESS_KEY_ID = AMAZON_CREDENTIAL['AWS_ACCESS_KEY_ID']
    AWS_SECRET_ACCESS_KEY = AMAZON_CREDENTIAL['AWS_SECRET_ACCESS_KEY']
    AWS_STORAGE_BUCKET_NAME = AMAZON_CREDENTIAL['AWS_STORAGE_BUCKET_NAME']
    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
    AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
    AWS_DEFAULT_ACL = None
    MEDIAFILES_LOCATION = 'media'
    DEFAULT_FILE_STORAGE = 'mebbscorner.custom_storages.MediaStorage'

else:
    MEDIA_ROOT= os.path.join(BASE_DIR, 'media/')
    MEDIA_URL= "/media/"


if DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # During development only
    EMAIL_FILE_PATH = (os.path.join(BASE_DIR, 'sent_emails'))
else:
    EMAIL_HOST = 'smtp.gmail.com'
    EMAIL_PORT = 587
    EMAIL_HOST_USER = 'futurealex360@gmail.com'
    EMAIL_HOST_PASSWORD = 'virtu@ldj1991'
    EMAIL_USE_TLS = True
    DEFAULT_FROM_EMAIL = 'Thicktealover <noreply@thicktealover.com>'